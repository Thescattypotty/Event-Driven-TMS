version: "3.9"

services:
  core-service:
    image: maven:3.8-openjdk-17
    container_name: core-service
    working_dir: /app
    volumes:
      - ./:app
    command: mvn clean install -DskipTests

  config-server: 
    image: maven:3.8-openjdk-17
    container_name: config-server
    working_dir: /app
    volumes:
      - ./config-service:/app
    command : mvn spring-boot:run
    ports:
      - "8888:8888"
    depends_on:
      - core-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  registry-service:
    image: maven:3.8-openjdk-17
    container_name: registry-service
    working_dir: /app
    volumes:
      - ./registry-service:/app
    command: mvn spring-boot:run
    ports:
      - "8761:8761"
    depends_on:
      - config-service
    networks:
      - backend-network

  gateway-service:
    image: maven:3.8-openjdk-17
    container_name: gateway-service
    working_dir: /app
    volumes:
      - ./gateway-service:/app
    command: mvn spring-boot:run
    ports:
      - "8222:8222"
    depends_on:
      - config-service
      - registry-service
    networks:
      - backend-network

  user-service:
    image: maven:3.8-openjdk-17
    container_name: user-service
    working_dir: /app
    volumes:
      - ./user-service:/app
    command: mvn spring-boot:run
    ports:
      - "8010:8010"
    depends_on:
      - config-service
      - registry-service
    networks:
      - backend-network

  task-service:
    image: maven:3.8-openjdk-17
    container_name: task-service
    working_dir: /app
    volumes:
      - ./task-service:/app
    command: mvn spring-boot:run
    ports:
      - "8020:8020"
    depends_on:
      - config-service
      - registry-service
    networks:
      - backend-network

  auth-service:
    image: maven:3.8-openjdk-17
    container_name: auth-service
    working_dir: /app
    volumes:
      - ./auth-service:/app
    command: mvn spring-boot:run
    ports:
      - "8030:8030"
    depends_on:
      - config-service
      - registry-service
    networks:
      - backend-network


networks:
  backend-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.enable_icc: "false"